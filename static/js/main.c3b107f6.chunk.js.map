{"version":3,"sources":["assets/images/Icon/React.svg","assets/images/Icon/typescript.svg","assets/images/Icon/html.svg","assets/images/Memory/memory.svg","assets/images/Ida/IDA.svg","assets/images/Icon/sass.svg","assets/images/Icon/mobx.svg","assets/images/Icon/spring.svg","assets/images/Icon/facebook.svg","assets/images/Icon/instagram.svg","assets/images/Icon/github.svg","assets/images/Icon/roket.svg","assets/images/Icon/js.svg","assets/images/Icon/css.svg","assets/images/Memory/memoryIcon.svg","assets/images/Ida/IDAIcon.svg","assets/images/Icon/kotlin.svg","components/Main/Main.tsx","containers/Main/MainContainer.tsx","pages/MainPage.tsx","models/skills.ts","models/frize.ts","components/Profile/Profile.tsx","containers/Profile/ProfileContainer.tsx","pages/ProfilePage.tsx","models/projects.ts","components/Project/Project.tsx","util/lib/useStore.ts","containers/Project/ProjectContainer.tsx","pages/ProjectPage.tsx","components/ProjectInfo/ProjectInfo.tsx","components/MemoryLog/MemoryLog.tsx","components/Ida/Ida.tsx","containers/Project/ProjectInfo/ProjectInfoContainer.tsx","pages/ProjectInfoPage.tsx","components/App.tsx","serviceWorker.ts","stores/index.ts","stores/Project/ProjectStore.ts","index.tsx"],"names":["module","exports","Main","className","to","inject","observer","MainPage","Skills","image","react","check","color","animation","js","ts","html","css","Frize","name","info","date","Profile","href","target","src","facebook","alt","insta","github","roket","map","res","style","width","backgroundColor","console","log","ProfilePage","Project","url","memory","Ida","handlePageName","Projects","onClick","React","useContext","MobXProviderContext","useStore","store","ProjectStore","ProjectPage","ProjectInfo","title","children","back","photo","backgroundImage","MemoryLog","Memory","MemoryIcon","HtmlIcon","ReactIcon","ScssIcon","TsIcon","Mobx","SpringBoot","IDa","IDaIcon","Kotlin","page","nowPage","ProjectInfoPage","App","exact","path","component","profilePage","projectPage","projectInfoPage","Boolean","window","location","hostname","match","stores","autobind","observable","localStorage","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c3b107f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/React.844f87ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/typescript.f95017e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/html.df954de4.svg\";","module.exports = __webpack_public_path__ + \"static/media/memory.f852d79f.svg\";","module.exports = __webpack_public_path__ + \"static/media/IDA.db9c112c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sass.ecce57e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/mobx.56f61e3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/spring.692a4c2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.1cb810b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.7d117270.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.3caa1bd9.svg\";","module.exports = __webpack_public_path__ + \"static/media/roket.b2a83686.svg\";","module.exports = __webpack_public_path__ + \"static/media/js.c9f88966.svg\";","module.exports = __webpack_public_path__ + \"static/media/css.8b5c67bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/memoryIcon.c8d69d4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/IDAIcon.3f99ed4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/kotlin.bd13b5e6.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Main.scss\";\r\n\r\ninterface MainProps {}\r\n\r\nconst Main = ({}: MainProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"main-content\">\r\n          <div className=\"main-content-title\">\r\n            <p className=\"main-content-title-text1\">The New</p>\r\n          </div>\r\n          <div className=\"main-content-title\">\r\n            <p className=\"main-content-title-text2\">Way To</p>\r\n            <p className=\"main-content-title-text3\"> Develop</p>\r\n            <div className=\"main-content-title-under\" />\r\n          </div>\r\n          <div className=\"main-content-info\">\r\n            소소하게 살아가는, 보고싶은 것을\r\n            <br />\r\n            하고싶은 것을 하는 개발자\r\n          </div>\r\n          <div className=\"main-content-btnarea\">\r\n            <Link to=\"/project\" className=\"main-content-btnarea-btn\">\r\n              Portfolio\r\n              <i className=\"line1\"></i>\r\n              <i className=\"line2\"></i>\r\n              <i className=\"line3\"></i>\r\n              <i className=\"line4\"></i>\r\n            </Link>\r\n            <Link to=\"/profile\" className=\"main-content-btnarea-btn\">\r\n              Profile\r\n              <i className=\"line1\"></i>\r\n              <i className=\"line2\"></i>\r\n              <i className=\"line3\"></i>\r\n              <i className=\"line4\"></i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { inject, observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport Main from \"../../components/Main\";\r\n\r\nconst MainContainer = () => {\r\n  return (\r\n    <>\r\n      <Main></Main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default inject(\"store\")(observer(MainContainer));\r\n","import React from \"react\";\r\nimport MainContainer from \"../containers/Main/MainContainer\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import react from \"../assets/images/Icon/React.svg\";\r\nimport js from \"../assets/images/Icon/js.svg\";\r\nimport ts from \"../assets/images/Icon/typescript.svg\";\r\nimport html from \"../assets/images/Icon/html.svg\";\r\nimport css from \"../assets/images/Icon/css.svg\";\r\n\r\nconst Skills = [\r\n  {\r\n    image: react,\r\n    className: \"react\",\r\n    check: \"87%\",\r\n    color: \"#61dafb\",\r\n    animation: \"react\",\r\n  },\r\n  {\r\n    image: js,\r\n    className: \"js\",\r\n    check: \"78%\",\r\n    color: \"#f7df1e\",\r\n    animation: \"js\",\r\n  },\r\n  {\r\n    image: ts,\r\n    className: \"ts\",\r\n    check: \"70%\",\r\n    color: \"#3178c6\",\r\n    animation: \"ts\",\r\n  },\r\n  {\r\n    image: html,\r\n    className: \"html\",\r\n    check: \"95%\",\r\n    color: \"#e44d26\",\r\n    animation: \"html\",\r\n  },\r\n  {\r\n    image: css,\r\n    className: \"css\",\r\n    check: \"95%\",\r\n    color: \"#0170ba\",\r\n    animation: \"css\",\r\n  },\r\n];\r\nexport default Skills;\r\n","const Frize = [\r\n  {\r\n    name: \"국립 대구 과학관 SW 해커톤 우수상\",\r\n    info: \"IOT 기술을 활용한 준비물 알림 시스템을 개발했습니다.\",\r\n    date: \"2019.07\",\r\n  },\r\n  {\r\n    name: \"지방 기능 경기대회 동상\",\r\n    info:\r\n      \"대구 지방 기능 경기 대회 '웹디자인' 부문에서 '동상(3위)'를 수상하였습니다\",\r\n    date: \"2020.06\",\r\n  },\r\n  {\r\n    name: \"소프트웨어 연합 해커톤 베어런 대표 이사상\",\r\n    info:\r\n      \"대구, 대덕, 광주 소프트웨어 마이스터 고등학교 학생들이 모인 소프트웨어 연합 해커톤에서 ‘베어런 대표이사 상’ 을 수상하였습니다.\",\r\n    date: \"2020.11\",\r\n  },\r\n  {\r\n    name: \"웹디자인 기능사\",\r\n    info: \"웹디자인 기능사 자격증 취득\",\r\n    date: \"2021.03\",\r\n  },\r\n];\r\nexport default Frize;\r\n","import React from \"react\";\r\nimport \"./Profile.scss\";\r\nimport \"../../util/animation.scss\";\r\nimport facebook from \"../../assets/images/Icon/facebook.svg\";\r\nimport insta from \"../../assets/images/Icon/instagram.svg\";\r\nimport github from \"../../assets/images/Icon/github.svg\";\r\nimport roket from \"../../assets/images/Icon/roket.svg\";\r\nimport Skills from \"../../models/skills\";\r\nimport Frize from \"../../models/frize\";\r\n\r\ninterface ProfileProps {}\r\n\r\nconst Profile = ({}: ProfileProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"profile\">\r\n        <div className=\"profile-area\">\r\n          <div className=\"profile-area-box\">\r\n            <div className=\"profile-area-box-photo\"></div>\r\n            <div className=\"profile-area-box-text\">\r\n              <div className=\"profile-area-box-text-name\">조민희</div>\r\n              <div className=\"profile-area-box-text-info\">\r\n                프론트엔드 개발자 <br /> 2021년 7월 19일부터 현장실습\r\n                가능합니다.\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-area-box-social\">\r\n              <a\r\n                href=\"https://www.facebook.com/profile.php?id=100027446058102\"\r\n                target=\"_blank\"\r\n              >\r\n                <img src={facebook} alt=\"\" />\r\n              </a>\r\n              <a href=\"https://www.instagram.com/rihito2021/\" target=\"_blank\">\r\n                <img src={insta} alt=\"\" />\r\n              </a>\r\n              <a href=\"https://github.com/Jominhui\" target=\"_blank\">\r\n                <img src={github} alt=\"\" />\r\n              </a>\r\n              <a\r\n                href=\"https://www.rocketpunch.com/@jominhyidadd83988cbb462f\"\r\n                target=\"_blank\"\r\n              >\r\n                <img src={roket} alt=\"\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-my\">\r\n          <div className=\"profile-my-title\">간단한 자기소개</div>\r\n          <div className=\"profile-my-info\">\r\n            소소하게 하고싶은 것을 하고, 만들고 싶은 것을 만드는 개발자\r\n            조민희입니다.\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-info\">\r\n          <div className=\"profile-info-left\">\r\n            <div className=\"profile-info-left-title\">My Current Skills</div>\r\n            {Skills.map((res) => {\r\n              return (\r\n                <div className=\"profile-info-left-skill\">\r\n                  <img src={res.image} alt=\"\" className={res.className} />\r\n                  <div className=\"profile-info-left-skill-prograss\">\r\n                    <div\r\n                      className={`profile-info-left-skill-prograss-${res.className}`}\r\n                      style={{\r\n                        width: `${res.check}`,\r\n                        animation: `${res.animation} 1s`,\r\n                        backgroundColor: `${res.color}`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"profile-info-left-skill-check\">\r\n                    {res.check}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"profile-info-right\">\r\n            <div className=\"profile-info-right-title\">수상 및 자격증</div>\r\n            {Frize.map((res) => {\r\n              return (\r\n                <div className=\"profile-info-right-list\">\r\n                  <div className=\"profile-info-right-list-title\">\r\n                    {res.name}\r\n                  </div>\r\n                  <div className=\"profile-info-right-list-info\">{res.info}</div>\r\n                  <div className=\"profile-info-right-list-info\">{res.date}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-infoarea\">\r\n          <div>\r\n            <div className=\"profile-my-title\">경력 혹은 학력</div>\r\n            <div className=\"profile-my-info\">\r\n              대구 소프트웨어 마이스터 고등학교 ( 2019.03 ~ 현재 재학중 )\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"profile-my-title\">연락처</div>\r\n            <div className=\"profile-my-info\">\r\n              Phone : 010-8798-2443 | Email : rihito2021@naver.com\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Profile from \"../../components/Profile\";\r\nimport Frize from \"../../models/frize\";\r\n\r\nconst ProfileContainer = ({}) => {\r\n  console.log(Frize);\r\n  return (\r\n    <>\r\n      <Profile />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileContainer);\r\n","import React from \"react\";\r\nimport ProfileContainer from \"../containers/Profile/ProfileContainer\";\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <>\r\n      <ProfileContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import memory from \"../assets/images/Memory/memory.svg\";\r\nimport Ida from \"../assets/images/Ida/IDA.svg\";\r\n\r\nconst Project = [\r\n  {\r\n    name: \"memory.log\",\r\n    info:\r\n      \"롤링페이퍼를 웹 사이트에서 제작하게 하여 롤링 페이퍼를 잃어버리지 않고 즐길 수 있도록 제작하였습니다. 대구 ICT 융합 엑스포에서 전시, 발표를 하였습니다.\",\r\n    date: \"2020년 08월 | 2020년 12월\",\r\n    url: \"/project/memory.log\",\r\n    image: memory,\r\n  },\r\n  {\r\n    name: \"IDa\",\r\n    info:\r\n      \"대구소프트웨어고등학교 신입생 입학 시스템입니다. 학생들이 쉽고 편리하게 원서 접수를 할 수 있도록 제작 중입니다. 프론트엔드는 React, MobX, Scss, TypeScript로 제작 중이며, 백엔드은 SpringBoot, Kotlin, Swagger, Thymeleaf 로 제작 중입니다.\",\r\n    date: \"2020년 08월 | 진행중\",\r\n    url: \"/project/ida\",\r\n    image: Ida,\r\n  },\r\n];\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport \"./Project.scss\";\r\nimport Projects from \"../../models/projects\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ProjectProps {\r\n  handlePageName: (page: string) => void;\r\n}\r\n\r\nconst Project = ({ handlePageName }: ProjectProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"project\">\r\n        <div className=\"project-container\">\r\n          <div className=\"project-container-title\">\r\n            <p className=\"project-container-title-text\">Showing Project</p>\r\n            <div className=\"project-container-title-under\" />\r\n          </div>\r\n          {Projects.map((res) => {\r\n            return (\r\n              <Link\r\n                to={res.url}\r\n                className=\"project-container-content\"\r\n                onClick={() => handlePageName(res.name)}\r\n              >\r\n                <div className=\"project-container-content-area\">\r\n                  <img\r\n                    className=\"project-container-content-area-image\"\r\n                    src={res.image}\r\n                  />\r\n                  <div className=\"project-container-content-area-info\">\r\n                    <div className=\"project-container-content-area-info-title\">\r\n                      {res.name}\r\n                    </div>\r\n                    <div className=\"project-container-content-area-info-date\">\r\n                      {res.date}\r\n                    </div>\r\n                    <div className=\"project-container-content-area-info-text\">\r\n                      {res.info}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport { MobXProviderContext } from \"mobx-react\";\r\nimport StoreType from \"../Types/StoreType\";\r\n\r\nexport default (): StoreType => {\r\n  return React.useContext(MobXProviderContext) as StoreType;\r\n};\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Project from \"../../components/Project\";\r\nimport useStore from \"../../util/lib/useStore\";\r\n\r\nconst ProjectContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const { handlePageName } = store.ProjectStore;\r\n\r\n  return (\r\n    <>\r\n      <Project handlePageName={handlePageName} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectContainer);\r\n","import React from \"react\";\r\nimport ProjectContainer from \"../containers/Project/ProjectContainer\";\r\n\r\nconst ProjectPage = () => {\r\n  return (\r\n    <>\r\n      <ProjectContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import React from \"react\";\r\nimport \"./ProjectInfo.scss\";\r\n\r\ninterface ProjectInfoProps {\r\n  title: string;\r\n  date: string;\r\n  children: React.ReactNode;\r\n  back: string;\r\n  photo: string;\r\n}\r\n\r\nconst ProjectInfo = ({\r\n  title,\r\n  children,\r\n  date,\r\n  back,\r\n  photo,\r\n}: ProjectInfoProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"projectinfo\">\r\n        <div\r\n          className=\"projectinfo-area\"\r\n          style={{\r\n            backgroundImage: `url(${back})`,\r\n          }}\r\n        >\r\n          <div className=\"projectinfo-area-box\">\r\n            <img className=\"projectinfo-area-box-photo\" src={photo} />\r\n            <div className=\"projectinfo-area-box-text\">\r\n              <div className=\"projectinfo-area-box-text-name\">{title}</div>\r\n              <div className=\"projectinfo-area-box-text-info\">{date}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"projectinfo-info\">{children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectInfo;\r\n","import React from \"react\";\r\nimport \"./MemoryLog.scss\";\r\nimport Memory from \"../../assets/images/Memory/memory.svg\";\r\nimport MemoryIcon from \"../../assets/images/Memory/memoryIcon.svg\";\r\nimport ProjectInfo from \"../ProjectInfo\";\r\nimport HtmlIcon from \"../../assets/images/Icon/html.svg\";\r\nimport ReactIcon from \"../../assets/images/Icon/React.svg\";\r\nimport ScssIcon from \"../../assets/images/Icon/sass.svg\";\r\nimport TsIcon from \"../../assets/images/Icon/typescript.svg\";\r\nimport Mobx from \"../../assets/images/Icon/mobx.svg\";\r\nimport SpringBoot from \"../../assets/images/Icon/spring.svg\";\r\n\r\ninterface MemoryLogProps {}\r\n\r\nconst MemoryLog = ({}: MemoryLogProps) => {\r\n  return (\r\n    <>\r\n      <ProjectInfo\r\n        title=\"memory.log\"\r\n        date=\"2021.08 ~ 2021.12\"\r\n        back={Memory}\r\n        photo={MemoryIcon}\r\n      >\r\n        <div className=\"memory\">\r\n          <div className=\"memory-title\">소개</div>\r\n          <div className=\"memory-info\">\r\n            롤링페이퍼를 웹 사이트에서 제작하게 하여 롤링 페이퍼를 잃어버리지\r\n            않고 즐길 수 있도록 제작하였습니다. <br />\r\n            대구 ICT 융합 엑스포에서 전시, 발표를 하였습니다\r\n          </div>\r\n\r\n          <div className=\"memory-title\">멤버</div>\r\n          <div className=\"memory-info\">\r\n            차승호, 임규민, 조민희, 정성훈, 제정민, 김진호\r\n          </div>\r\n\r\n          <div className=\"memory-title\">사용 기술</div>\r\n          <div className=\"memory-icon\">\r\n            <img src={HtmlIcon} alt=\"\" />\r\n            <img src={ReactIcon} alt=\"\" />\r\n            <img src={ScssIcon} alt=\"\" />\r\n            <img src={TsIcon} alt=\"\" />\r\n            <img src={Mobx} alt=\"\" />\r\n            <img src={SpringBoot} alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"memory-title\">프로젝트를 통해 얻은것</div>\r\n          <div className=\"memory-info\">\r\n            <p>1. 협업 활동</p>\r\n            프로젝트를 하면서 github에서 코드를 합치는 법, organizations에 코드\r\n            커밋하는 법, 역할 분담 등을 친구들을 통해 배우고 익혀나갔습니다.\r\n            <p>2. 파일 구조 (PCC)</p>\r\n            Presentational -{\">\"} Container -{\">\"} Component 순의 파일 구조로\r\n            Container에서는 비즈니스로직들을 Component에서는 뷰로직을 적어 보다\r\n            편하고 알기 쉽게 파일을 구분하 정리하는 방식입니다.\r\n            <p>3. API에 관한 문서 Swagger</p>\r\n            혼자 개발하면서는 볼 수 없었던 API문서를 보는 법을 배웠습니다.\r\n            swagger를 보면서 어떤 값을 보내야하고 어떤 값들이 넘어오고, 타입은\r\n            어떤 것이 있는지 확인 할 수 있으니, 개발할 때 매우 도움이\r\n            되었습니다.\r\n            <p>4. JS에서 TS까지</p>\r\n            REACT 처음에는 JS를 많이 사용했습니다. 왜냐하면 강의나 자료들을 보면\r\n            대부분 JS가 많은 비중을 차지하고 있었기 때문입니다. 하지만 JS를\r\n            사용하면서 불편한 점이 있었습니다. 변수나 반환되는 값들의 타입이\r\n            맞지않아 많은 오류가 발생했습니다. 이런점을 어떻게 고칠가 하던중\r\n            나르샤 프로젝트에서 TS를 사용하게 되었습니다. TS를 사용하니 모든\r\n            값들에 타입들을 정의해줘야 하고 맞지 않다면 바로바로 잡아주기 때문에\r\n            개발하는데 많은 편리함을 주었습니다. 앞으로 TS를 왜 사용해야 하는지\r\n            공부해 나갈 것입니다.\r\n            <p>5. MOBX</p>\r\n            MOBX는 REACT 상태 관리 라이브러리 입니다. 여기서 상태 관리\r\n            라이브러리란 간단히 말하자면 REACT의 트리 구조의 props 전달과\r\n            state가 아닌, 특정한 저장소에 데이터를 따로 모아놓고 관리하는\r\n            것입니다.\r\n          </div>\r\n        </div>\r\n      </ProjectInfo>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MemoryLog;\r\n","import React from \"react\";\r\nimport \"./Ida.scss\";\r\nimport IDa from \"../../assets/images/Ida/IDA.svg\";\r\nimport IDaIcon from \"../../assets/images/Ida/IDAIcon.svg\";\r\nimport ProjectInfo from \"../ProjectInfo\";\r\nimport HtmlIcon from \"../../assets/images/Icon/html.svg\";\r\nimport ReactIcon from \"../../assets/images/Icon/React.svg\";\r\nimport ScssIcon from \"../../assets/images/Icon/sass.svg\";\r\nimport TsIcon from \"../../assets/images/Icon/typescript.svg\";\r\nimport Mobx from \"../../assets/images/Icon/mobx.svg\";\r\nimport Kotlin from \"../../assets/images/Icon/kotlin.svg\";\r\nimport SpringBoot from \"../../assets/images/Icon/spring.svg\";\r\n\r\ninterface IdaProps {}\r\n\r\nconst Ida = ({}: IdaProps) => {\r\n  return (\r\n    <>\r\n      <ProjectInfo\r\n        title=\"IDa\"\r\n        date=\"2021.08 ~ 현재진행중\"\r\n        back={IDa}\r\n        photo={IDaIcon}\r\n      >\r\n        <div className=\"memory\">\r\n          <div className=\"memory-title\">소개</div>\r\n          <div className=\"memory-info\">\r\n            대구소프트웨어고등학교 신입생 입학 시스템입니다. <br />\r\n            학생들이 쉽고 편리하게 원서 접수를 할 수 있도록 현재 제작 중입니다.\r\n          </div>\r\n\r\n          <div className=\"memory-title\">멤버</div>\r\n          <div className=\"memory-info\">차승호, 조민희, 정성훈, 안채원</div>\r\n\r\n          <div className=\"memory-title\">사용 기술</div>\r\n          <div className=\"memory-icon\">\r\n            <img src={HtmlIcon} alt=\"\" />\r\n            <img src={ReactIcon} alt=\"\" />\r\n            <img src={ScssIcon} alt=\"\" />\r\n            <img src={TsIcon} alt=\"\" />\r\n            <img src={Mobx} alt=\"\" />\r\n            <img src={Kotlin} alt=\"\" />\r\n            <img src={SpringBoot} alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"memory-title\">프로젝트를 통해 얻은것</div>\r\n          <div className=\"memory-info\">\r\n            <p>1. 전체적인 코드의 정리</p>\r\n            자주 사용하는 css 컬러나 혹은 지역 목록 또는 날짜, 서버에서 넘어온\r\n            값을 바꿔주는 컨버터등을 만들어 다른 파일로 나누어 두는 것이\r\n            로직에서나 코드상에서나 사용하기 쉽고 보기 편하다는 것을 알았습니다.\r\n            <p>2. 인원의 구성과 사용 기술의 중요성</p>\r\n            나르샤 프로젝트를 진행하고 다른 협업 프로텍트를 진행하면서 각자 다른\r\n            기술을 사용하는 사람들이 많았습니다. 만약 기술 스택이 다른 사람과\r\n            만나면 갈등이 생기고, 그 갈등은 프로젝트에 많은 지장을 주었습니다.\r\n            그렇기 때문에 회사에서 어던 기술을 원하는지 알아보고 지원을 하고, 내\r\n            분야가 맞는지도 생각을 해야할 것 같습니다.\r\n            <p>3. 라이브러리에 대한 생각</p>\r\n            프로젝트를 하면서 많은 라이브러리를 사용하게 될 수도 있습니다. 물론\r\n            자기가 직접 만드는 것이 좋겠지만 그러하지 못한 경우가 대다수 이기에\r\n            만들어진 라이브러리를 사용하게 됩니다. 하지만 라이브러리를\r\n            사용하면서 불편한 점이 생각보다 많았습니다. 라이브러리 때문에 변수나\r\n            값의 전달이 제대로 안되는 경우도 있었고, ui가 바뀌는 경우도\r\n            많았습니다. 라이브러리가 편하고 좋은 방법이지만 가능한 쓰지 않는\r\n            방향으로 나아갈 것 같습니다.\r\n          </div>\r\n        </div>\r\n      </ProjectInfo>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ida;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport useStore from \"../../../util/lib/useStore\";\r\nimport MemoryLog from \"../../../components/MemoryLog\";\r\nimport Ida from \"../../../components/Ida\";\r\n\r\nconst ProjectInfoContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const { page } = store.ProjectStore;\r\n  let nowPage = <></>;\r\n\r\n  if (page === \"memory.log\") {\r\n    nowPage = <MemoryLog />;\r\n  } else if (page === \"IDa\") {\r\n    nowPage = <Ida />;\r\n  }\r\n\r\n  return <>{nowPage}</>;\r\n};\r\n\r\nexport default observer(ProjectInfoContainer);\r\n","import React from \"react\";\r\nimport ProjectInfoContainer from \"../containers/Project/ProjectInfo/ProjectInfoContainer\";\r\n\r\nconst ProjectInfoPage = () => {\r\n  return (\r\n    <>\r\n      <ProjectInfoContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectInfoPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport MainPage from \"../pages/MainPage\";\r\nimport profilePage from \"../pages/ProfilePage\";\r\nimport projectPage from \"../pages/ProjectPage\";\r\nimport projectInfoPage from \"../pages/ProjectInfoPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={MainPage} />\r\n        <Route exact path=\"/profile\" component={profilePage} />\r\n        <Route exact path=\"/project\" component={projectPage} />\r\n        <Route exact path=\"/project/memory.log\" component={projectInfoPage} />\r\n        <Route exact path=\"/project/ida\" component={projectInfoPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ProjectStore from \"./Project\";\r\n\r\nconst stores = {\r\n  ProjectStore: new ProjectStore(),\r\n};\r\n\r\nexport default stores;\r\n","import { action, observable } from \"mobx\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\n@autobind\r\nclass ProjectStore {\r\n  @observable page: string | null = localStorage.page;\r\n\r\n  @action\r\n  handlePageName = (page: string) => {\r\n    this.page = page;\r\n    localStorage.page = page;\r\n  };\r\n}\r\n\r\nexport default ProjectStore;\r\n","import React from \"react\";\r\nimport { Provider } from \"mobx-react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport stores from \"./stores\";\r\nimport \"./util/util.scss\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={stores}>\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}